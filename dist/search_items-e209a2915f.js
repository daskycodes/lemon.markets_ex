searchNodes=[{"doc":"Elixir client for the lemon.markets API. This module provides all requests to the lemon.markets API. Please check the README for more information and refer to the Modules LemonMarketsEx.Authentication , LemonMarketsEx.Data , LemonMarketsEx.Orders , LemonMarketsEx.Spaces and LemonMarketsEx.TradingVenues for more details and examples.","ref":"LemonMarketsEx.html","title":"LemonMarketsEx","type":"module"},{"doc":"See LemonMarketsEx.Orders.activate_order/2 .","ref":"LemonMarketsEx.html#activate_order/2","title":"LemonMarketsEx.activate_order/2","type":"function"},{"doc":"See LemonMarketsEx.Authentication.authenticate/3 .","ref":"LemonMarketsEx.html#authenticate/3","title":"LemonMarketsEx.authenticate/3","type":"function"},{"doc":"See LemonMarketsEx.Orders.create_order/2 .","ref":"LemonMarketsEx.html#create_order/2","title":"LemonMarketsEx.create_order/2","type":"function"},{"doc":"See LemonMarketsEx.Orders.delete_order/2 .","ref":"LemonMarketsEx.html#delete_order/2","title":"LemonMarketsEx.delete_order/2","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_instruments/2 .","ref":"LemonMarketsEx.html#get_instruments/2","title":"LemonMarketsEx.get_instruments/2","type":"function"},{"doc":"See LemonMarketsEx.Data.get_latest_ohlc_data/4 .","ref":"LemonMarketsEx.html#get_latest_ohlc_data/4","title":"LemonMarketsEx.get_latest_ohlc_data/4","type":"function"},{"doc":"See LemonMarketsEx.Data.get_latest_quote/3 .","ref":"LemonMarketsEx.html#get_latest_quote/3","title":"LemonMarketsEx.get_latest_quote/3","type":"function"},{"doc":"See LemonMarketsEx.Data.get_latest_trade/3 .","ref":"LemonMarketsEx.html#get_latest_trade/3","title":"LemonMarketsEx.get_latest_trade/3","type":"function"},{"doc":"See LemonMarketsEx.Data.get_ohlc_data/5 .","ref":"LemonMarketsEx.html#get_ohlc_data/5","title":"LemonMarketsEx.get_ohlc_data/5","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_opening_days/2 .","ref":"LemonMarketsEx.html#get_opening_days/2","title":"LemonMarketsEx.get_opening_days/2","type":"function"},{"doc":"See LemonMarketsEx.Orders.get_order/2 .","ref":"LemonMarketsEx.html#get_order/2","title":"LemonMarketsEx.get_order/2","type":"function"},{"doc":"See LemonMarketsEx.Orders.get_orders/2 .","ref":"LemonMarketsEx.html#get_orders/2","title":"LemonMarketsEx.get_orders/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_portfolio/2 .","ref":"LemonMarketsEx.html#get_portfolio/2","title":"LemonMarketsEx.get_portfolio/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_portfolio_transactions/2 .","ref":"LemonMarketsEx.html#get_portfolio_transactions/2","title":"LemonMarketsEx.get_portfolio_transactions/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_space/2 .","ref":"LemonMarketsEx.html#get_space/2","title":"LemonMarketsEx.get_space/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_space_state/2 .","ref":"LemonMarketsEx.html#get_space_state/2","title":"LemonMarketsEx.get_space_state/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_spaces/1 .","ref":"LemonMarketsEx.html#get_spaces/1","title":"LemonMarketsEx.get_spaces/1","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_state/1 .","ref":"LemonMarketsEx.html#get_state/1","title":"LemonMarketsEx.get_state/1","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_trading_venue/2 .","ref":"LemonMarketsEx.html#get_trading_venue/2","title":"LemonMarketsEx.get_trading_venue/2","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_trading_venue_instrument/3 .","ref":"LemonMarketsEx.html#get_trading_venue_instrument/3","title":"LemonMarketsEx.get_trading_venue_instrument/3","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_trading_venue_instrument_warrants/4 .","ref":"LemonMarketsEx.html#get_trading_venue_instrument_warrants/4","title":"LemonMarketsEx.get_trading_venue_instrument_warrants/4","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_trading_venue_instruments/3 .","ref":"LemonMarketsEx.html#get_trading_venue_instruments/3","title":"LemonMarketsEx.get_trading_venue_instruments/3","type":"function"},{"doc":"See LemonMarketsEx.TradingVenues.get_trading_venues/1 .","ref":"LemonMarketsEx.html#get_trading_venues/1","title":"LemonMarketsEx.get_trading_venues/1","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_transaction/2 .","ref":"LemonMarketsEx.html#get_transaction/2","title":"LemonMarketsEx.get_transaction/2","type":"function"},{"doc":"See LemonMarketsEx.Spaces.get_transactions/2 .","ref":"LemonMarketsEx.html#get_transactions/2","title":"LemonMarketsEx.get_transactions/2","type":"function"},{"doc":"This module provides authentication requests for the lemon.markets API. See here for more information.","ref":"LemonMarketsEx.Authentication.html","title":"LemonMarketsEx.Authentication","type":"module"},{"doc":"Authenticates the client with the lemon.markets API. Returns a new LemonMarketsEx.Client.t/0 scoped to the space for the client_id. The LemonMarketsEx.Client.t/0 is needed to make authenticated requests to the lemon.markets API. Returns {:ok, %LemonMarketsEx.Client{}} on success. Returns {:error, %LemonMarketsEx.Error{}} on failure. Examples iex&gt; LemonMarketsEx.Authentication . authenticate ( client_id , client_secret , base_url ) { :ok , % LemonMarketsEx.Client { } } Parameters client_id - Grab the client ID from your client in the dashboard . client_secret - Grab the client secret from your client in the dashboard . base_url - The base URL for the lemon.markets API.","ref":"LemonMarketsEx.Authentication.html#authenticate/3","title":"LemonMarketsEx.Authentication.authenticate/3","type":"function"},{"doc":"Requests a new LemonMarketsEx.Token.t/0 from the lemon.markets API. Returns {:ok, %LemonMarketsEx.Token{}} if successful. Returns {:error, %LemonMarketsEx.Error{}} if unsuccessfull. Examples iex&gt; LemonMarketsEx.Authentication . request_auth_token ( client_id , client_secret ) { :ok , % LemonMarketsEx.Token { access_token : &quot;...&quot; , token_type : &quot;bearer&quot; , expires_in : 2591999 , expires_at : 1629410619 , scope : %{ data : [ &quot;stream&quot; , &quot;historical&quot; , &quot;read&quot; ] , order : [ &quot;stock&quot; , &quot;bond&quot; , &quot;warrant&quot; , &quot;etf&quot; , &quot;fund&quot; , &quot;read&quot; ] , portfolio : [ &quot;read&quot; ] , space : &quot;268908e8-e31d-47bc-b830-8b90f80806ed&quot; , transaction : [ &quot;read&quot; , &quot;create&quot; ] } } } Parameters client_id - Grab the client ID from your client in the dashboard . client_secret - Grab the client secret from your client in the dashboard .","ref":"LemonMarketsEx.Authentication.html#request_auth_token/2","title":"LemonMarketsEx.Authentication.request_auth_token/2","type":"function"},{"doc":"Conveniently retrieve historic market data in M1/H1/D1 format, get the latest quotes and trades for specific instruments or stream market data in real time.","ref":"LemonMarketsEx.Data.html","title":"LemonMarketsEx.Data","type":"module"},{"doc":"Get the latest historic OHLC data for the given ISIN. Examples iex&gt; LemonMarketsEx.Data . get_latest_ohlc_data ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; , &quot;m1&quot; ) %{ :ok , %{ c : 117.56 , h : 117.56 , l : 117.56 , o : 117.56 , t : 1626883320.0 } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only XMUN is supported. isin - The ISIN of the instrument you want to get the latest quote for. x1 - Specify the type of data you want: &quot;m1&quot; , &quot;h1&quot; , or &quot;d1&quot;","ref":"LemonMarketsEx.Data.html#get_latest_ohlc_data/4","title":"LemonMarketsEx.Data.get_latest_ohlc_data/4","type":"function"},{"doc":"Retrieve the latest quotes for a specific instrument and use the information for your trading strategy. Examples iex&gt; LemonMarketsEx.Data . get_latest_quote ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; ) { :ok , %{ a : 118.64 , a_v : 590 , b : 118.44 , b_v : 590 , t : 1626896210.796 } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only XMUN is supported. isin - The ISIN of the instrument you want to get the latest quote for","ref":"LemonMarketsEx.Data.html#get_latest_quote/3","title":"LemonMarketsEx.Data.get_latest_quote/3","type":"function"},{"doc":"Retrieve the latest trade for a specific instrument. Examples iex&gt; LemonMarketsEx.Data . get_latest_trade ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; ) { :ok , %{ p : 118.48 , t : 1626896169.054 , v : 3 } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only XMUN is supported. isin - The ISIN of the instrument you want to get the latest quote for.","ref":"LemonMarketsEx.Data.html#get_latest_trade/3","title":"LemonMarketsEx.Data.get_latest_trade/3","type":"function"},{"doc":"Get the historic OHLC data for the given ISIN. Examples iex&gt; LemonMarketsEx.Data . get_ohlc_data ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; , &quot;m1&quot; ) %{ :ok , %{ next : # Function &lt; 4.108004987 / 0 in LemonMarketsEx.Utils . pagination_link_to_fun / 2 &gt; , previous : # Function &lt; 4.108004987 / 0 in LemonMarketsEx.Utils . pagination_link_to_fun / 2 &gt; , results : [ %{ c : 117.56 , h : 117.56 , l : 117.56 , o : 117.56 , t : 1626883320.0 } , %{ c : 117.58 , h : 117.86 , l : 117.58 , o : 117.86 , t : 1626883260.0 } , %{ c : 117.92 , h : 117.92 , l : 117.92 , o : 117.92 , t : 1.6268832e9 } , %{ c : 118.2 , h : 118.2 , l : 118.2 , o : 118.2 , t : 1626882240.0 } , %{ c : 118.02 , h : 118.02 , l : 118.02 , o : 118.02 , t : 1626882060.0 } , ... ] } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only XMUN is supported. isin - The ISIN of the instrument you want to get the latest quote for. x1 - Specify the type of data you want: &quot;m1&quot; , &quot;h1&quot; , or &quot;d1&quot; . params - A keyword list of query parameters. ordering (optional) - By default, the data is not ordered. Choose between &quot;date&quot; (oldest to newest) or &quot;-date&quot; (newest to oldest). date_from (optional) - UTC UNIX Timestamp. Filter to get data from a specific date. date_until (optional) - UTC UNIX Timestamp. Filter to get data from a specific date.","ref":"LemonMarketsEx.Data.html#get_ohlc_data/5","title":"LemonMarketsEx.Data.get_ohlc_data/5","type":"function"},{"doc":"This module provides order requests for the lemon.markets API. See here for more information.","ref":"LemonMarketsEx.Orders.html","title":"LemonMarketsEx.Orders","type":"module"},{"doc":"Activates a created LemonMarketsEx.Order.t/0 with the API scoped to the given space in the client. You can either pass the LemonMarketsEx.Order.t/0 struct or the UUID of the order to activate. Returns {:ok, %{status: &quot;activated&quot;}} on success. Returns {:error, Error.t()} on failure. Examples iex&gt; order = % Order { uuid : &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; } iex&gt; LemonMarketsEx.Spaces . activate_order ( client , order ) { :ok , %{ status : &quot;activated&quot; } } iex&gt; LemonMarketsEx.Spaces . activate_order ( client , &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; ) { :ok , %{ status : &quot;activated&quot; } } Parameters client - LemonMarketsEx.Client.t/0 order - The Order.t() to activate | order_uuid - The UUID of the order to activate.","ref":"LemonMarketsEx.Orders.html#activate_order/2","title":"LemonMarketsEx.Orders.activate_order/2","type":"function"},{"doc":"Create a new LemonMarketsEx.Order.t/0 with the API scoped to the given space in the client. Examples iex&gt; isin = &quot;US0090661010&quot; iex&gt; valid_until = :os . system_time ( :seconds ) + 3600 iex&gt; LemonMarketsEx.Spaces . create_order ( client , %{ isin : isin , valid_until : valid_until , side : &quot;buy&quot; , quantity : 1 } ) { :ok , % LemonMarketsEx.Order { average_price : nil , created_at : nil , instrument : %{ isin : &quot;US0090661010&quot; , title : nil } , limit_price : nil , processed_at : nil , processed_quantity : nil , quantity : 1 , side : &quot;buy&quot; , status : &quot;inactive&quot; , stop_price : nil , trading_venue_mic : &quot;XMUN&quot; , type : nil , uuid : &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; , valid_until : 1626809265.0 } } Parameters client - LemonMarketsEx.Client.t/0 create_order_params - A map of query parameters to create the order. isin (required) - ISIN of an instrument. valid_until (required) - UTC UNIX Timestamp in seconds or JS Timestamp (see here ). Can be any date in the future. side (required) - &quot;buy&quot; or &quot;sell&quot; . quantity (required) - The amount of shares you want to buy. stop_price (optional) - See here for information on numbers format. limit_price (optional) - See here for information on numbers format.","ref":"LemonMarketsEx.Orders.html#create_order/2","title":"LemonMarketsEx.Orders.create_order/2","type":"function"},{"doc":"Delete an LemonMarketsEx.Order.t/0 with the API scoped to the given space in the client. The order's status has to be &quot;inactive&quot; or &quot;active&quot; . You can either pass the Order.t() struct or the UUID of the order to be deleted. Returns :ok on success. Returns {:error, Error.t()} on failure. Examples iex&gt; order = % Order { uuid : &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; } iex&gt; LemonMarketsEx.Spaces . delete_order ( client , order ) :ok iex&gt; LemonMarketsEx.Spaces . delete_order ( client , &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; ) :ok Parameters client - LemonMarketsEx.Client.t/0 order - The Order.t() to delete | order_uuid - The UUID of the order to delete.","ref":"LemonMarketsEx.Orders.html#delete_order/2","title":"LemonMarketsEx.Orders.delete_order/2","type":"function"},{"doc":"Get a single LemonMarketsEx.Order.t/0 by UUID placed with the API scoped to the given space in the client. Examples iex&gt; LemonMarketsEx.Spaces . get_order ( client , &quot;f4515dd5-bb80-4fb2-8e76-43e1b63dfe91&quot; ) { :ok , % LemonMarketsEx.Order { average_price : &quot;117.4600&quot; , created_at : 1626444099.043547 , instrument : %{ isin : &quot;US0090661010&quot; , title : &quot;AIRBNB INC.&quot; } , limit_price : nil , processed_at : 1626444132.988 , processed_quantity : 4 , quantity : 4 , side : &quot;buy&quot; , status : &quot;executed&quot; , stop_price : nil , type : &quot;market&quot; , trading_venue_mic : &quot;XMUN&quot; , uuid : &quot;f4515dd5-bb80-4fb2-8e76-43e1b63dfe91&quot; , valid_until : 1629115248.0 } } Parameters client - LemonMarketsEx.Client.t/0 order_uuid - The UUID of the order to get.","ref":"LemonMarketsEx.Orders.html#get_order/2","title":"LemonMarketsEx.Orders.get_order/2","type":"function"},{"doc":"Get a list of all orders that you placed with the API scoped to the given space in the client. Additonally, you also have the option to filter the response to only get the orders you are specifically interested in. Examples iex&gt; LemonMarketsEx.Spaces . get_orders ( client ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.Order { average_price : &quot;117.4600&quot; , created_at : 1626444099.043547 , instrument : %{ isin : &quot;US0090661010&quot; , title : &quot;AIRBNB INC.&quot; } , limit_price : nil , processed_at : 1626444132.988 , processed_quantity : 4 , quantity : 4 , side : &quot;buy&quot; , status : &quot;executed&quot; , stop_price : nil , type : &quot;market&quot; , trading_venue_mic : &quot;XMUN&quot; , uuid : &quot;f4515dd5-bb80-4fb2-8e76-43e1b63dfe91&quot; , valid_until : 1629115248.0 } , ... ] } } Parameters client - LemonMarketsEx.Client.t/0 params - A keyword list of query parameters. created_at_until (optional) - UTC UNIX Timestamp in seconds or JS Timestamp (see here ). Can be any date in the future. created_at_from (optional) - UTC UNIX Timestamp in seconds or JS Timestamp (see here ). Can be any date in the future. side (optional) - &quot;buy&quot; or &quot;sell&quot; . type (optional) - Filter for order type: &quot;limit&quot; , &quot;market&quot; , &quot;stop_limit&quot; , &quot;stop_market&quot; . status (optional) - Filter for status: &quot;inactive&quot; , &quot;active&quot; , &quot;in_progress&quot; , &quot;executed&quot; , &quot;deleted&quot; , &quot;expired&quot; . limit (optional) - Required for pagination; default is 200. offset (optional) - Required for pagination.","ref":"LemonMarketsEx.Orders.html#get_orders/2","title":"LemonMarketsEx.Orders.get_orders/2","type":"function"},{"doc":"Spaces are an (if not the most) important concept for using lemon.markets. It is crucial to understand what a space is and how it relates to your overall balance and the cash you can invest. If you have not quite grasped the concept of spaces yet, please take a look here for a detailed overview.","ref":"LemonMarketsEx.Spaces.html","title":"LemonMarketsEx.Spaces","type":"module"},{"doc":"Gets a list of LemonMarketsEx.PortfolioItem.t/0 structs for the given space in the client. Returns {:ok, %{next: any, previous: any, [PortfolioItem.t()]}} on success. Returns {:error, Error.t()} on failure. Examples iex&gt; LemonMarketsEx.Spaces . get_portfolio ( client ) { :ok , %{ next : nil , previous : nil , results : [ % PortfolioItem { } , ... ] } } Parameters client - LemonMarketsEx.Client.t/0 params - A keyword list of query parameters. limit (optional) - Required for pagination; default is 200. offset (optional) - Required for pagination.","ref":"LemonMarketsEx.Spaces.html#get_portfolio/2","title":"LemonMarketsEx.Spaces.get_portfolio/2","type":"function"},{"doc":"Gets a list of LemonMarketsEx.PortfolioTransaction.t/0 structs for the given space in the client. Returns {:ok, %{next: any, previous: any, [PortfolioTransaction.t()]}} on success. Returns {:error, Error.t()} on failure. Examples iex&gt; LemonMarketsEx.Spaces . get_portfolio_transactions ( client ) { :ok , %{ next : nil , previous : nil , results : [ % PortfolioTransaction { } , ... ] } } Parameters client - LemonMarketsEx.Client.t/0 params - A keyword list of query parameters. created_at_until (optional) - UTC Unix Timestamp. created_at_from (optional) - UTC Unix Timestamp. limit (optional) - Required for pagination; default is 200. offset (optional) - Required for pagination.","ref":"LemonMarketsEx.Spaces.html#get_portfolio_transactions/2","title":"LemonMarketsEx.Spaces.get_portfolio_transactions/2","type":"function"},{"doc":"Get a LemonMarketsEx.Space.t/0 by its UUID. Examples iex&gt; LemonMarketsEx.Spaces . get_space ( client , &quot;33e81fe3-7ada-433d-bdc4-7db4d5033b60&quot; ) { :ok , % LemonMarketsEx.Space { name : &quot;Naive Paper Strategy&quot; , state : %{ balance : &quot;10000.0000&quot; , cash_to_invest : &quot;10000.0000&quot; } , type : &quot;strategy&quot; , uuid : &quot;33e81fe3-7ada-433d-bdc4-7db4d5033b60&quot; } } Parameters client - LemonMarketsEx.Client.t/0 space_uuid - The UUID of the space to get.","ref":"LemonMarketsEx.Spaces.html#get_space/2","title":"LemonMarketsEx.Spaces.get_space/2","type":"function"},{"doc":"Get the state of a LemonMarketsEx.Space.t/0 . Examples iex&gt; LemonMarketsEx.Spaces . get_space_state ( client , &quot;33e81fe3-7ada-433d-bdc4-7db4d5033b60&quot; ) { :ok , %{ balance : &quot;10000.0000&quot; , cash_to_invest : &quot;10000.0000&quot; } } Parameters client - LemonMarketsEx.Client.t/0 space_uuid - The UUID of the space state to get.","ref":"LemonMarketsEx.Spaces.html#get_space_state/2","title":"LemonMarketsEx.Spaces.get_space_state/2","type":"function"},{"doc":"Get a list of all your spaces. Examples iex&gt; LemonMarketsEx.Spaces . get_spaces ( client ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.Space { name : &quot;Naive Paper Strategy&quot; , state : %{ balance : &quot;10000.0000&quot; , cash_to_invest : &quot;10000.0000&quot; } , type : &quot;strategy&quot; , uuid : &quot;33e81fe3-7ada-433d-bdc4-7db4d5033b60&quot; } ] } } Parameters client - LemonMarketsEx.Client.t/0 params - A keyword list of query parameters. limit (optional) - The maximum number of spaces to return. offset (optional) - The offset to start returning spaces from.","ref":"LemonMarketsEx.Spaces.html#get_spaces/2","title":"LemonMarketsEx.Spaces.get_spaces/2","type":"function"},{"doc":"Get the LemonMarketsEx.State.t/0 for the given client. The state is a place where unused money is store and can be reached. Examples iex&gt; LemonMarketsEx.Spaces . get_state ( client ) { :ok , % LemonMarketsEx.State { cash_account_number : nil , securities_account_number : nil , state : %{ balance : &quot;89999.0000&quot; } } } Parameters client - LemonMarketsEx.Client.t/0","ref":"LemonMarketsEx.Spaces.html#get_state/1","title":"LemonMarketsEx.Spaces.get_state/1","type":"function"},{"doc":"Gets a single LemonMarketsEx.Transaction.t/0 struct for the given space in the client. Returns {:ok, Transaction.t()} on success. Returns {:error, Error.t()} on failure. Examples iex&gt; LemonMarketsEx.Spaces . get_transaction ( client , transaction_uuid ) { :ok , % Transaction { } } Parameters client - LemonMarketsEx.Client.t/0 transaction_uuid - The UUID of the transaction.","ref":"LemonMarketsEx.Spaces.html#get_transaction/2","title":"LemonMarketsEx.Spaces.get_transaction/2","type":"function"},{"doc":"Gets a list of LemonMarketsEx.Transaction.t/0 structs for the given space in the client. Returns {:ok, %{next: any, previous: any, [Transaction.t()]}} on success. Returns {:error, Error.t()} on failure. Examples iex&gt; LemonMarketsEx.Spaces . get_transactions ( client ) { :ok , %{ next : nil , previous : nil , results : [ % Transaction { } , ... ] } } Parameters client - LemonMarketsEx.Client.t() params - A keyword list of query parameters. created_at_until (optional) - UTC Unix Timestamp. created_at_from (optional) - UTC Unix Timestamp. limit (optional) - Required for pagination; default is 200. offset (optional) - Required for pagination.","ref":"LemonMarketsEx.Spaces.html#get_transactions/2","title":"LemonMarketsEx.Spaces.get_transactions/2","type":"function"},{"doc":"This module provides requests for the trading venues endpoint. Including trading venue specific instruments. You can specify the Trading Venue, from which you want to receive your data. To do so, add the respective abbreviation in the URL. We currently support the connection to the Munich Stock Exchange (&quot;XMUN&quot;), but in the future we migt add additional trading vanues, which you can then very easily specificy using their abbreviation. Instruments are equities that are tradable on lemon.markets: stocks, bonds, funds, warrants or ETFs.","ref":"LemonMarketsEx.TradingVenues.html","title":"LemonMarketsEx.TradingVenues","type":"module"},{"doc":"Returns a list of all instruments. Currently, only the instruments for the &quot;XMUN&quot; exchange are supported. Examples iex&gt; LemonMarketsEx.Instruments . get_instruments ( client , search : &quot;AIRBNB&quot; , type : &quot;stock&quot; ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.Instrument { currency : &quot;EUR&quot; , isin : &quot;US0090661010&quot; , name : &quot;AIRBNB INC. DL-,01&quot; , symbol : &quot;6Z1&quot; , title : &quot;AIRBNB INC.&quot; , tradable : true , trading_venues : [ %{ mic : &quot;XMUN&quot; , title : &quot;Gettex&quot; } ] , type : &quot;stock&quot; , wkn : &quot;A2QG35&quot; } ] } } Parameters client - LemonMarketsEx.Client.t/0 params : A keyword list of parameters. tradable : If true, only tradable instruments are returned. search : Search for Name/Title, ISIN, WKN or symbol currency : 3 letter abbreviation, e.g. &quot;EUR&quot; or &quot;USD&quot; type : &quot;stock&quot; , &quot;bond&quot; , &quot;fund&quot; , &quot;ETF&quot; , or &quot;warrant&quot; limit : The maximum number of instruments to return. offset : The offset of the first instrument to return.","ref":"LemonMarketsEx.TradingVenues.html#get_instruments/2","title":"LemonMarketsEx.TradingVenues.get_instruments/2","type":"function"},{"doc":"Get the trading venue opening days for the given mic. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venue_opening_days ( client , &quot;XMUN&quot; ) { :ok , %{ next : nil , previous : nil , results : [ %{ closing_time : 1.6268976e9 , day_iso : &quot;2021-07-21&quot; , opening_time : 1.6268472e9 } , %{ closing_time : 1.6319088e9 , day_iso : &quot;2021-09-17&quot; , ... } , %{ closing_time : 1.632168e9 , ... } , %{ ... } , ... ] } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only &quot;XMUN&quot; is supported.","ref":"LemonMarketsEx.TradingVenues.html#get_opening_days/2","title":"LemonMarketsEx.TradingVenues.get_opening_days/2","type":"function"},{"doc":"Get a single t:LemonMarketsEx.TrandingVenue.t/0 for a given mic. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venue ( client , &quot;XMUN&quot; ) { :ok , % LemonMarketsEx.TradingVenue { is_open : false , mic : &quot;XMUN&quot; , name : &quot;Börse München - Gettex&quot; , title : &quot;Gettex&quot; } } Parameters client - LemonMarketsEx.Client.t/0 mic - Abbreviation of Trading Venue. Currently, only &quot;XMUN&quot; is supported.","ref":"LemonMarketsEx.TradingVenues.html#get_trading_venue/2","title":"LemonMarketsEx.TradingVenues.get_trading_venue/2","type":"function"},{"doc":"Get a single instrument from a specific trading venue. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venue_instrument ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; ) { :ok , % LemonMarketsEx.Instrument { currency : &quot;EUR&quot; , isin : &quot;US0090661010&quot; , name : &quot;AIRBNB INC. DL-,01&quot; , symbol : &quot;6Z1&quot; , title : &quot;AIRBNB INC.&quot; , tradable : true , trading_venues : [ ] , type : &quot;stock&quot; , wkn : &quot;A2QG35&quot; } } Parameters client - LemonMarketsEx.Client.t/0 mic - The trading venue abbreviation. Currently, only &quot;XMUN&quot; is supported. isin - The ISIN of the specific instrument you want to retrieve.","ref":"LemonMarketsEx.TradingVenues.html#get_trading_venue_instrument/3","title":"LemonMarketsEx.TradingVenues.get_trading_venue_instrument/3","type":"function"},{"doc":"Get all warrants for a specific instrument. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venue_instrument_warrants ( client , &quot;XMUN&quot; , &quot;US0090661010&quot; , limit : 1 ) { :ok , %{ next : # Function &lt; 4.108004987 / 0 in LemonMarketsEx.Utils . pagination_link_to_fun / 2 &gt; , previous : nil , results : [ %{ currency : &quot;EUR&quot; , isin : &quot;DE000TT7PD71&quot; , name : &quot;HSBC TO. BULL 6Z1&quot; , symbol : &quot;&quot; , title : &quot;&quot; , tradable : false , type : &quot;warrant&quot; , wkn : &quot;TT7PD7&quot; } ] } } Parameters client - LemonMarketsEx.Client.t/0 mic - The trading venue abbreviation. Currently, only &quot;XMUN&quot; is supported. isin - The ISIN of the specific instrument you want to retrieve. params - A keyword list of parameters. tradable (optional) - true or false . search (optional) - search for Name/Title, ISIN, WKN or symbol. currency (optional) - 3 letter abbreviation, e.g. &quot;EUR&quot; or &quot;USD&quot; limit (optional) - Needed for pagination, default is 100. offset (optional) - Needed for pagination.","ref":"LemonMarketsEx.TradingVenues.html#get_trading_venue_instrument_warrants/4","title":"LemonMarketsEx.TradingVenues.get_trading_venue_instrument_warrants/4","type":"function"},{"doc":"Returns a list of all instruments for the given trading venue. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venue_instruments ( client , &quot;XMUN&quot; , search : &quot;AIRBNB&quot; , type : &quot;stock&quot; ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.Instrument { currency : &quot;EUR&quot; , isin : &quot;US0090661010&quot; , name : &quot;AIRBNB INC. DL-,01&quot; , symbol : &quot;6Z1&quot; , title : &quot;AIRBNB INC.&quot; , tradable : true , trading_venues : [ ] , type : &quot;stock&quot; , wkn : &quot;A2QG35&quot; } ] } } Parameters client - LemonMarketsEx.Client.t/0 mic - The trading venue abbreviation. Currently, only &quot;XMUN&quot; is supported. params - A keyword list of parameters. tradable (optional) - If true, only tradable instruments are returned. search (optional) - Search for Name/Title, ISIN, WKN or symbol currency (optional) - 3 letter abbreviation, e.g. &quot;EUR&quot; or &quot;USD&quot; type (optional) - &quot;stock&quot; , &quot;bond&quot; , &quot;fund&quot; , &quot;ETF&quot; , or &quot;warrant&quot; limit (optional) - The maximum number of instruments to return. offset (optional) - The offset of the first instrument to return.","ref":"LemonMarketsEx.TradingVenues.html#get_trading_venue_instruments/3","title":"LemonMarketsEx.TradingVenues.get_trading_venue_instruments/3","type":"function"},{"doc":"Get a list of all available trading venues. Examples iex&gt; LemonMarketsEx.TradingVenues . get_trading_venues ( client ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.TradingVenue { is_open : false , mic : &quot;XMUN&quot; , name : &quot;Börse München - Gettex&quot; , title : &quot;Gettex&quot; } ] } } Parameters client - LemonMarketsEx.Client.t/0","ref":"LemonMarketsEx.TradingVenues.html#get_trading_venues/1","title":"LemonMarketsEx.TradingVenues.get_trading_venues/1","type":"function"},{"doc":"Client for interacting with the lemon.markets API. After sucessfully authenticating with the API, and receiving the LemonMarketsEx.Token.t/0 from LemonMarketsEx.Authentication.request_auth_token/2 , you can call LemonMarketsEx.Client.new/2 to get a client, scoped to a space to make further API calls. For more information about the Authentication process, see here .","ref":"LemonMarketsEx.Client.html","title":"LemonMarketsEx.Client","type":"module"},{"doc":"Create a client, scoped to a space given the LemonMarketsEx.Token.t/0 to make further API calls. Examples iex&gt; { :ok , token } = LemonMarketsEx.Authentication . request_auth_token ( client_id , client_secret ) iex&gt; client = LemonMarketsEx.Client . new ( token , base_url ) iex&gt; LemonMarketsEx . get_state ( client ) { :ok , % LemonMarketsEx.State { cash_account_number : nil , securities_account_number : nil , state : %{ balance : &quot;89999.0000&quot; } } }","ref":"LemonMarketsEx.Client.html#new/2","title":"LemonMarketsEx.Client.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Client.html#t:t/0","title":"LemonMarketsEx.Client.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.Error.html","title":"LemonMarketsEx.Error","type":"module"},{"doc":"","ref":"LemonMarketsEx.Error.html#from_result/1","title":"LemonMarketsEx.Error.from_result/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Error.html#new/2","title":"LemonMarketsEx.Error.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Error.html#t:t/0","title":"LemonMarketsEx.Error.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.Instrument.html","title":"LemonMarketsEx.Instrument","type":"module"},{"doc":"","ref":"LemonMarketsEx.Instrument.html#from_body/1","title":"LemonMarketsEx.Instrument.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Instrument.html#new/2","title":"LemonMarketsEx.Instrument.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Instrument.html#t:t/0","title":"LemonMarketsEx.Instrument.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.Order.html","title":"LemonMarketsEx.Order","type":"module"},{"doc":"","ref":"LemonMarketsEx.Order.html#from_body/1","title":"LemonMarketsEx.Order.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Order.html#from_create/1","title":"LemonMarketsEx.Order.from_create/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Order.html#new/2","title":"LemonMarketsEx.Order.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Order.html#t:t/0","title":"LemonMarketsEx.Order.t/0","type":"type"},{"doc":"A position that is part of a specific space.","ref":"LemonMarketsEx.PortfolioItem.html","title":"LemonMarketsEx.PortfolioItem","type":"module"},{"doc":"","ref":"LemonMarketsEx.PortfolioItem.html#from_body/1","title":"LemonMarketsEx.PortfolioItem.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.PortfolioItem.html#new/2","title":"LemonMarketsEx.PortfolioItem.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.PortfolioItem.html#t:t/0","title":"LemonMarketsEx.PortfolioItem.t/0","type":"type"},{"doc":"A position which was added to your portfolio through a transaction.","ref":"LemonMarketsEx.PortfolioTransaction.html","title":"LemonMarketsEx.PortfolioTransaction","type":"module"},{"doc":"","ref":"LemonMarketsEx.PortfolioTransaction.html#from_body/1","title":"LemonMarketsEx.PortfolioTransaction.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.PortfolioTransaction.html#new/2","title":"LemonMarketsEx.PortfolioTransaction.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.PortfolioTransaction.html#t:t/0","title":"LemonMarketsEx.PortfolioTransaction.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.Space.html","title":"LemonMarketsEx.Space","type":"module"},{"doc":"","ref":"LemonMarketsEx.Space.html#from_body/1","title":"LemonMarketsEx.Space.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Space.html#new/2","title":"LemonMarketsEx.Space.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Space.html#t:t/0","title":"LemonMarketsEx.Space.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.State.html","title":"LemonMarketsEx.State","type":"module"},{"doc":"","ref":"LemonMarketsEx.State.html#from_body/1","title":"LemonMarketsEx.State.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.State.html#new/2","title":"LemonMarketsEx.State.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.State.html#t:t/0","title":"LemonMarketsEx.State.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.Token.html","title":"LemonMarketsEx.Token","type":"module"},{"doc":"","ref":"LemonMarketsEx.Token.html#from_body/1","title":"LemonMarketsEx.Token.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Token.html#new/2","title":"LemonMarketsEx.Token.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Token.html#t:t/0","title":"LemonMarketsEx.Token.t/0","type":"type"},{"doc":"","ref":"LemonMarketsEx.TradingVenue.html","title":"LemonMarketsEx.TradingVenue","type":"module"},{"doc":"","ref":"LemonMarketsEx.TradingVenue.html#from_body/1","title":"LemonMarketsEx.TradingVenue.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.TradingVenue.html#new/2","title":"LemonMarketsEx.TradingVenue.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.TradingVenue.html#t:t/0","title":"LemonMarketsEx.TradingVenue.t/0","type":"type"},{"doc":"A transaction that affects the cash amount available for your space.","ref":"LemonMarketsEx.Transaction.html","title":"LemonMarketsEx.Transaction","type":"module"},{"doc":"","ref":"LemonMarketsEx.Transaction.html#from_body/1","title":"LemonMarketsEx.Transaction.from_body/1","type":"function"},{"doc":"","ref":"LemonMarketsEx.Transaction.html#new/2","title":"LemonMarketsEx.Transaction.new/2","type":"function"},{"doc":"","ref":"LemonMarketsEx.Transaction.html#t:t/0","title":"LemonMarketsEx.Transaction.t/0","type":"type"},{"doc":"🍋 lemon.markets_ex Elixir client for the lemon.markets API Note: lemon.markets is in closed beta and this library is a work in progress. Expect breaking changes until the release of version 1.0. To get a general understading of the API, please refer to the official documentation and the getting started guide .","ref":"readme.html","title":"🍋 lemon.markets_ex","type":"extras"},{"doc":"The package is currently not available on hex.pm but can be installed directly from GitHub. def deps do [ { :lemon_markets_ex , github : &quot;daskycodes/lemon.markets_ex&quot; } ] end","ref":"readme.html#installation","title":"🍋 lemon.markets_ex - 💻 Installation","type":"extras"},{"doc":"Please refer to the Modules &quot; LemonMarketsEx.Authentication , LemonMarketsEx.Data , LemonMarketsEx.Orders , LemonMarketsEx.Spaces and LemonMarketsEx.TradingVenues for more details and examples. You can find the documenataion here . 🔐 Authentication Most requests require authentication. To get started, you need to create a client instance. Every client is scoped to a specific space and has predefined permissions. You can get your client credentials from your dashboard . { :ok , % LemonMarketsEx.Client { } = client } = LemonMarketsEx . authenticate ( YOUR_CLIENT_ID , YOUR_CLIENT_SECRET , &quot;https://super-secret.lemon.markets/rest/v1&quot; ) 🏦 Your first request You can check your state, the balance of your state as well as how much cash you have left to invest. { :ok , % LemonMarketsEx.State { cash_account_number : nil , securities_account_number : nil , state : %{ balance : &quot;100000.0000&quot; } } } = LemonMarketsEx . get_state ( client ) 📈 Creating an order Finding an instrument Let's find a Instrument we would like to buy: You can pass in the query parameters as a keyword list or map. iex&gt; LemonMarketsEx . get_instruments ( client , search : &quot;AIRBNB&quot; , type : &quot;stock&quot; ) { :ok , %{ next : nil , previous : nil , results : [ % LemonMarketsEx.Instrument { currency : &quot;EUR&quot; , isin : &quot;US0090661010&quot; , name : &quot;AIRBNB INC. DL-,01&quot; , symbol : &quot;6Z1&quot; , title : &quot;AIRBNB INC.&quot; , tradable : true , trading_venues : [ %{ mic : &quot;XMUN&quot; , title : &quot;Gettex&quot; } ] , type : &quot;stock&quot; , wkn : &quot;A2QG35&quot; } ] } } As you can see the function returns an :ok tuple with the result as map %{next: nil, previous: nil, results: [%LemonMarketsEx.Instrument{}]} . Please refer to the Pagination section on how to paginate through records. Create a new order So we've found what we would like to buy. A single stock of AIRBNB . To create a new order we need to call the function LemonMarketsEx.create_order/2 with the create_order_params as second argument: create_order_params - A map of query parameters to create the order. isin (required) - ISIN of an instrument. valid_until (required) - UTC UNIX Timestamp in seconds or JS Timestamp (see here ). Can be any date in the future. side (required) - &quot;buy&quot; or &quot;sell&quot; . quantity (required) - The amount of shares you want to buy. stop_price (optional) - See here for information on numbers format. limit_price (optional) - See here for information on numbers format. iex&gt; valid_until = valid_until = :os . system_time ( :seconds ) + 360 iex&gt; create_order_params = %{ isin : &quot;US0090661010&quot; , valid_until : valid_until , side : &quot;buy&quot; , quantity : 1 } iex&gt; order = LemonMarketsEx . create_order ( client , create_order_params ) { :ok , % LemonMarketsEx.Order { average_price : nil , created_at : nil , instrument : %{ isin : &quot;US0090661010&quot; , title : nil } , limit_price : nil , processed_at : nil , processed_quantity : nil , quantity : 1 , side : &quot;buy&quot; , status : &quot;inactive&quot; , stop_price : nil , trading_venue_mic : &quot;XMUN&quot; , type : nil , uuid : &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; , valid_until : 1626809265.0 } } Activate the newly created order Nice. We successfully created a new order. But it's status is &quot;inactive&quot; . That's because we still need to activate the order by calling the LemonMarketsEx.activate_order/2 function. The second argument can either be the newly created %Order{} struct or just the order_uuid : iex&gt; order = % Order { uuid : &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; } iex&gt; LemonMarketsEx . activate_order ( client , order ) { :ok , %{ status : &quot;activated&quot; } } iex&gt; order = &quot;0f91b8f4-8524-4692-a26c-586a800570ae&quot; iex&gt; LemonMarketsEx . activate_order ( client , order ) { :ok , %{ status : &quot;activated&quot; } } 🥳 Success! You might have noticed that we do not need to explicitly specify if we would like to create a market_order , stop_order , limit_order or stop_limit_order . lemon.markets recognizes the type of order automatically. Please refer to this great blogpost about the different types of orders. 📄 Pagination Most collections in the lemon.markets API can be paginated by specifying the limit and offset query parameters, and calling the anonymous function as next.() and previous.() : iex&gt; { :ok , %{ next : next , previous : nil , results : first_batch } } = LemonMarketsEx . get_instruments ( client , search : &quot;AIR&quot; , type : &quot;stock&quot; , limit : 3 ) iex&gt; { :ok , %{ next : next , previous : previous , results : second_batch } } = next . ( ) iex&gt; { :ok , %{ results : ^ first_batch } } = previous . ( )","ref":"readme.html#getting-started","title":"🍋 lemon.markets_ex - 🚀 Getting started","type":"extras"},{"doc":"Fork it daskycodes/lemon.markets_ex Create your feature branch (git checkout -b my-new-feature) Commit your changes (git commit -am 'Add some feature') Push to the branch (git push origin my-new-feature) Create a new Pull Request","ref":"readme.html#contributing","title":"🍋 lemon.markets_ex - 🤝 Contributing","type":"extras"},{"doc":"This project is licensed under the MIT License - see the LICENSE file for details. Copyright (c) 2021 Daniel Khaapamyaki","ref":"readme.html#license","title":"🍋 lemon.markets_ex - 📝 License","type":"extras"}]